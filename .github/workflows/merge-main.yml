on:
  push:
    branches:
      - main

name: 🚀 Deploy main

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

defaults:
  run:
    shell: bash

jobs:
  build-and-test:
    name: 🏗 Build Project, 🧪 Run Tests & 🚀 Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v3
      - uses: pnpm/action-setup@v2.2.3
        with:
          version: 7.13.4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
        shell: bash
      - name: 💾 Cache Nx cache
        id: package-cache
        uses: actions/cache@v3
        with:
          path: |
            nx-cache
          # Cache will be updated at every run: https://github.com/actions/cache/blob/main/workarounds.md#update-a-cache
          key: ${{ runner.os }}-nx-cache-${{ env.NODE_VERSION }}-${{github.event.number}}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-nx-cache-${{ env.NODE_VERSION }}-${{github.event.number}}-
            ${{ runner.os }}-nx-cache-${{ env.NODE_VERSION }}-
            ${{ runner.os }}-nx-cache-
      - name: '🏗 Package'
        run: pnpm nx affected --target=package --parallel=2
      - name: '🧪 Run tests'
        run: pnpm nx affected --targets=test-linter,test-type,test-unit,test-circular --parallel=2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
      - name: '🚀 Deploy main'
        run: pnpm nx affected --target=deploy-production --parallel=2
      - name: '🔎 Run integration tests'
        run: SLS_ENV=production pnpm nx run-many --target=test-integration --parallel=2
